version
installed.packages()
install.packages("knitr")
version
install.packages("jsonlite")
install.packages("devtools")
library(devtools)
install.packages('devtools')
library(devtools)
install("C:\Users\demengha\Downloads\azuretheme\azuretheme")
install("C:/Users/demengha/Downloads/azuretheme/azuretheme")
font_import()
library(azuretheme)
font_import()
library(flexdashboard)
library(shiny)
library(shinyWidgets)
library(shinyjs)
library(data.table)
library(tidyverse)
library(tidyquant)
# library(anytime)
# library(vroom)
library(anomalize)
library(plotly)
# library(tictoc)
library(tidyr)
library(tibble)
library(vctrs)
# library(azuretheme)
# library(AzureKusto)
advisor_score <- readxl::read_xlsx("UpstreamDataHandling.xlsx", sheet = "Upstream")
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
setwd("C:/Users/demengha/OneDrive - Microsoft/CGA/Analysis/Deepsha/Advisor")
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
setwd("~/")
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
setwd("C:/Users/demengha/OneDrive - Microsoft/CGA/Analysis/Deepsha/Advisor")
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
library(flexdashboard)
library(shiny)
library(shinyWidgets)
library(shinyjs)
library(data.table)
library(tidyverse)
library(tidyquant)
# library(anytime)
# library(vroom)
library(anomalize)
library(plotly)
# library(tictoc)
library(tidyr)
library(tibble)
library(vctrs)
# library(azuretheme)
# library(AzureKusto)
advisor_score
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
setwd("C:/Users/demengha/OneDrive - Microsoft/CGA/Analysis/Deepsha/Advisor")
cu_recommendation <- readxl::read_xlsx(("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
cu_recommendation
cu_recommendation <- cu_recommendation %>%
group_by(Category, RecommendationType) %>%
summarise(Subscriptions = sum(dcount_SubscriptionGuid),
Consumption = round(sum(sum_DenominatorCU), digits = 1)
) %>%
ungroup()
advisor_score <- advisor_score %>%
mutate(Date = as.Date(CalendarDate)) %>%
select(-CalendarDate) %>%
left_join((cu_recommendation %>% select(RecommendationType, Subscriptions, Consumption)))
cu_recommendation
advisor_score
packages <- c("odbc", "forecast", "DT", "tidyverse", "tidyquant", "tibble", "AzureKusto", "plotly", "dplyr", "lubridate", "tidyr", "data.table", "prophet", "yardstick", "gridExtra", "flexdashboard"	, "shiny"	, "shinyWidgets"	, "shinyjs"	, "tidyverse"	, "tidyquant"	, "readxl"	, "DT"	, "RColorBrewer"	, "tidytext"	, "plotly"
)
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
# Getting data libraries
packages <- c("odbc", "forecast", "DT", "tidyverse", "tidyquant", "tibble", "AzureKusto", "plotly", "dplyr", "lubridate", "tidyr", "data.table", "prophet", "yardstick", "gridExtra", "flexdashboard"	, "shiny"	, "shinyWidgets"	, "shinyjs"	, "tidyverse"	, "tidyquant"	, "readxl"	, "DT"	, "RColorBrewer"	, "tidytext"	, "plotly"
)
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
server <- "https://cgadataout.kusto.windows.net"
database <- 'CGAWorkArea'
scratch_con <- kusto_database_endpoint(server = server, database = database)
library(flexdashboard)
library(shiny)
library(shinyWidgets)
library(shinyjs)
library(data.table)
library(tidyverse)
library(tidyquant)
# library(anytime)
# library(vroom)
library(anomalize)
library(plotly)
# library(tictoc)
library(tidyr)
library(tibble)
library(vctrs)
# library(azuretheme)
# library(AzureKusto)
advisor_score <- readxl::read_xlsx("UpstreamDataHandling.xlsx", sheet = "Upstream")
cu_recommendation <- readxl::read_xlsx(here::here("UpstreamDataHandling.xlsx"), sheet = "RecommendationTypeData")
advisor_score
install.packages("charlatan")
library(charlatan)
ch_color_name(locale = "en_US", n = 3)
ch_color_name(locale = "en_US", n = 3)
ch_color_name(locale = "en_US", n = 3)
ch_color_name(locale = "en_US", n = 200)
ch_beta(3)
ch_company()
ch_doi()
ch_job()
advisor_score
advisor_score %>%
distinct(RecommendationType)
advisor_score %>%
distinct(RecommendationType) %>%
mutate(colors = ch_color_name(locale = "en_US", n = 346))
color_to_resourcemap <- advisor_score %>%
distinct(RecommendationType) %>%
mutate(colors = ch_color_name(locale = "en_US", n = 346))
advisor_score %>%
left_join(color_to_resourcemap)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,ResourceCount = ResourceCount/623)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,ResourceCount = ResourceCount)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,ResourceCount = ResourceCount) %>%
mutate(ResourceCount = ResourceCount/623)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,ResourceCount = ResourceCount) %>%
mutate(Download_count = ResourceCount/623)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,Download_count = ResourceCount) %>%
mutate(Download_count = Download_count/623)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,Download_count = ResourceCount) %>%
mutate(Download_count = Download_count/623) %>%
write.csv("color_downloads.csv")
cu_recommendation
cu_recommendation
View(cu_recommendation)
advisor_score %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate,download_count = ResourceCount) %>%
mutate(download_count = download_count/623) %>%
write.csv("color_downloads.csv")
cu_recommendation %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate = Date, visit_count = sum_DenominatorCU) %>%
mutate(visit_count = visit_count/623) %>%
write.csv("color_visits.csv")
cu_recommendation %>%
left_join(color_to_resourcemap) %>%
select(colors, CalendarDate = Date, visit_count = sum_DenominatorCU) %>%
mutate(visit_count = visit_count/623)
write.csv(color_to_resourcemap, "color_to_resourcemap.csv")
setwd("~/GitHub/MyFirstQuartoBlog")
